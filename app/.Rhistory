"34701",
"34702",
"34703",
"35600"
)
# Albers projection for 48 contiguous US states
US_ALBERS <- "+proj=aea +lat_1=29.5 +lat_2=45.5 +lat_0=37.5 +lon_0=-96 +x_0=0 +y_0=0 +datum=WGS84 +no_defs"
# Colors used in New York Times map
NYT_COLORS <- c(
"#740023",
"#b63132",
"#d27952",
"#e9b777",
"#fdf6a3",
"#a2c0a1",
"#55889e",
"#195473",
"#004364"
)
# Color used in New York Times map for missing values
NYT_NA_COLOR <- "#f2f2f2"
# Population URL:
# https://factfinder.census.gov/faces/tableservices/jsf/pages/productview.xhtml?src=bkmk
# Jobs by educational attainment data: ACS_16_5YR_S2301
# Monthly housing costs by income, ACS DP04
# Ethnic diversity by county: ACS_16_5YR_B03002
# solution-begin
# Load dataset with mobility by county
mobility_dta_file <- "D:/c01 Data/online_table2.dta"
# Load employment by educational attainment data
jobs_file <- "D:/c01 Data/ACS_16_5YR_S2301_jobs/ACS_16_5YR_S2301.csv"
# DP04 MONTHLY HOUSING COSTS
housing_file <- "D:/c01 Data/ACS_16_5YR_DP04_housing/ACS_16_5YR_DP04.csv"
# Ethnic diversity by county
diversity_file <-
"D:/c01 Data/ACS_16_5YR_B03002_race/ACS_16_5YR_B03002.csv"
population_file <- "D:/c01 Data/PEP_2016_PEPANNRES/PEP_2016_PEPANNRES.csv"
# Geographic boundaries as used by Raj Chetty
states_rds <- "D:/R/cb_2015_us_state_20m_sf.rds"
counties_rds <- "D:/R/cb_2015_us_county_20m_sf.rds"
# solution-end
# solution-begin
mobility_dta <-
read_dta(mobility_dta_file)
mobility <-
mobility_dta %>%
mutate(
pct_kids_p25 = pct_causal_p25_kr26,
pct_kids_p75 = pct_causal_p75_kr26,
county = cty2000,
county_stateabbrv = str_c(county_name, stateabbrv, sep = " County, ")
)
# mobility %>%
#   ggplot(aes(pct_kids_p25)) +
#   geom_histogram(bins = 20, fill = "green") +
#   theme_minimal() +
#   labs(
#     title = "Distribution of Adult Income Mobility by County, Causal Estimates",
#     subtitle = "For Families at the 25% Percentile of Income and with Kids",
#     x = "Causal Income Mobility Estimate (% Increase)",
#     y = "Frequency",
#     caption = "Source: Raj Chetty"
#   )
#
# mobility %>%
#   ggplot(aes(pct_kids_p75)) +
#   geom_histogram(bins = 20, fill = "blue") +
#   theme_minimal() +
#   labs(
#     title = "Distribution of Adult Income Mobility by County, Causal Estimates",
#     subtitle = "For Families at the 75% Percentile of Income and with Kids",
#     x = "Causal Income Mobility Estimate (% Increase)",
#     y = "Frequency",
#     caption = "Source: Raj Chetty"
#   )
# # solution-end
# solution-begin
# Ignore Alaska and Hawaii, not practical to move there
counties <-
read_rds(counties_rds) %>%
mutate(county = as.numeric(GEOID)) %>%
filter(!str_detect(STATEFP, "02")) %>%
filter(!str_detect(STATEFP, "15")) %>%
st_transform(crs = US_ALBERS)
states <-
read_rds(states_rds) %>%
filter(!str_detect(STATEFP, "02")) %>%
filter(!str_detect(STATEFP, "15")) %>%
mutate(county = as.numeric(GEOID)) %>%
st_transform(crs = US_ALBERS)
# Merge counties with geographic data and change to Albers projection
mobility_county <-
mobility %>%
filter(stateabbrv != "AK", stateabbrv != "HI") %>%
left_join(counties, by = "county") %>%
select(county, county_stateabbrv, pct_kids_p25, geometry)
# solution-end
# solution-begin
q3 <-
mobility_county %>%
ggplot() +
geom_sf(aes(fill = pct_kids_p25), color = NYT_NA_COLOR, size = 0.01) +
geom_sf(data = states, fill = NA, size = 0.01) +
scale_fill_gradientn(
colors = NYT_COLORS,
na.value = NYT_NA_COLOR
) +
coord_sf(datum = NA) +
guides(
fill = guide_colorbar(
title = "Average Adult Annual Income Change (%)",
title.position = "top",
title.theme = element_text(size = 8, angle = 0),
title.hjust = .5,
label.theme = element_text(size = 7, angle = 0),
barwidth = 12,
barheight = 0.4,
direction = "horizontal"
)
) +
theme_void() +
theme(
legend.position = "bottom",
legend.text = element_text(size = 6)
) +
labs(
title = "The Effects of Location on Intergenerational Adult Income Mobility",
subtitle = "Change in Annual Earnings for 25th Percentile Families with Kids"
) +
scale_fill_gradientn(
breaks = c(-1.5, -1.0, -0.5, 0, .5, 1.0, 1.5, 2.0),
colors = NYT_COLORS,
na.value = NYT_NA_COLOR
)
q3
# solution-end
# solution-begin
population <-
read_csv(population_file) %>%
filter(!str_detect(`GEO.display-label`, "Alaska"),  !str_detect(`GEO.display-label`, "Hawaii")) %>%
mutate(
county = as.numeric(GEO.id2),
county_state = `GEO.display-label`,
pop_2016 = respop72016
) %>%
select(county, county_state, pop_2016)
mobility_county %>%
top_n(10, wt = pct_kids_p25) %>%
left_join(population %>% select(-county_state), by = "county") %>%
select(county_stateabbrv, pct_kids_p25, pop_2016)
mobility_county %>%
top_n(-10, wt = pct_kids_p25) %>%
left_join(population %>% select(-county_state), by = "county") %>%
select(county_stateabbrv, pct_kids_p25, pop_2016)
# solution-end
# task-begin
chloroplether <-
function(data, var_fill, title_main, subtitle, title_legend, caption) {
# Your code here
# return(chloro_plot)
}
# task-end
# solution-begin
chloroplether <-
function(data, var_fill, title_main, subtitle, title_legend, caption) {
var_fill <- enquo(var_fill)
chloro_plot <-
data %>%
ggplot() +
geom_sf(aes(fill = data %>% pull(!!var_fill)), color = NYT_NA_COLOR, size = 0.01) +
geom_sf(data = states, color = "black", fill = NA, size = 0.01) +
scale_fill_gradientn(
colors = NYT_COLORS,
na.value = NYT_NA_COLOR
) +
coord_sf(datum = NA) +
guides(
fill = guide_colorbar(
title = title_legend,
title.position = "top",
title.theme = element_text(size = 8, angle = 0),
title.hjust = .5,
label.theme = element_text(size = 7, angle = 0),
barwidth = 12,
barheight = 0.4,
direction = "horizontal"
)
) +
theme_void() +
theme(
legend.position = "bottom",
legend.text = element_text(size = 6)
) +
labs(
title = title_main,
subtitle = subtitle,
caption = caption
)
return(chloro_plot)
}
# solution-end
# solution-begin
# Jobs by educational attainment
jobs <-
read_csv(
jobs_file,
na = c("(X)", "-", "**", "N")
)
jobs_county <-
jobs %>%
filter(!str_detect(`GEO.display-label`, "Alaska"),  !str_detect(`GEO.display-label`, "Hawaii")) %>%
mutate(
county = as.numeric(GEO.id2),
county_state = `GEO.display-label`,
employrate = (HC01_EST_VC44 + HC01_EST_VC45) / HC01_EST_VC43 * 100
) %>%
left_join(counties, by = "county") %>%
select(
county,
county_state,
employrate,
geometry
) %>%
ungroup()
# HC02_EST_VC44	Labor Force Participation Rate; Estimate; EDUCATIONAL ATTAINMENT - Population 25 to 64 years - Less than high school graduate
# HC02_EST_VC45	Labor Force Participation Rate; Estimate; EDUCATIONAL ATTAINMENT - Population 25 to 64 years - High school graduate (includes equivalency)
q4.2 <-
chloroplether(
data = jobs_county,
var_fill = employrate,
title_main = "Labor Participation Rate with High School Education or Less",
title_legend = "Rate (%)",
subtitle = "For Adults Aged 25 - 64 of all Genders and Races",
caption = "Source: ACS 5-Year Surveys"
)
q4.2
jobs_county %>%
top_n(10, wt = employrate) %>%
left_join(population %>% select(-county_state), by = "county") %>%
transmute(county_state, labor_participation_rate = employrate, population2016 = pop_2016)
jobs_county %>%
top_n(-10, wt = employrate) %>%
left_join(population %>% select(-county_state), by = "county") %>%
transmute(county_state, labor_participation_rate = employrate, population2016 = pop_2016)
# solution-end
# solution-begin
housing_data <-
read_csv(
housing_file,
na = c("(X)", "-", "**", "N")
)
housing_county <-
housing_data %>%
filter(HC01_VC159 > 500) %>%
rowwise() %>%
mutate(
county = as.numeric(`GEO.id2`),
county_state = `GEO.display-label`,
`pct_below_29.9` = sum(HC01_VC160, HC01_VC161, HC01_VC162)  / HC01_VC159 * 100
) %>%
ungroup() %>%
left_join(counties, by = "county") %>%
select(county, county_state, `pct_below_29.9`, geometry) %>%
filter(!is.na(`pct_below_29.9`)) %>%
arrange(`pct_below_29.9`)
q4.3 <-
chloroplether(
data = housing_county,
var_fill = `pct_below_29.9`,
title_main = "Housing Affordability as a Share of Income",
title_legend = "Mortgaged Housing Units considered Affordable (%)",
subtitle = "Percentage of Mortgaged Units costing under 29.9% of Monthly Income",
caption = "Source: ACS 5-Year Surveys"
)
q4.3
# solution-end
# solution-begin
# Ethnicity
diversity_data <-
read_csv(
diversity_file,
na = c("(X)", "-", "**", "N")
)
diversity_county <-
diversity_data %>%
filter(!str_detect(`GEO.display-label`, "Alaska"),  !str_detect(`GEO.display-label`, "Hawaii")) %>%
mutate(
county = as.numeric(GEO.id2),
county_state = `GEO.display-label`,
pct_white = HD01_VD03 / HD01_VD01 * 100,
diversity = 100 - pct_white
) %>%
left_join(counties, by = "county") %>%
select(county, county_state, pct_white, diversity, geometry)
# solution-end
# solution-begin
chloroplether(
diversity_county,
pct_white,
title_main = "Percentage White non-Hispanic Demographic by County" ,
subtitle = "",
title_legend = "Percentage of County Population",
caption = "Source: ACS"
)
# solution-end
# solution-begin
merged_data <-
mobility_county %>%
select(-county_stateabbrv) %>%
left_join(jobs_county %>% select(-geometry), by = c("county")) %>%
left_join(housing_county %>% select(-geometry), by = c("county", "county_state")) %>%
left_join(diversity_county %>% select(-c(geometry, county_state, pct_white)), by = "county") %>%
filter(!is.na(`pct_below_29.9`), !is.na(diversity)) %>%
mutate(
gross_rank = row_number(),
pct_kids_p25 = pct_kids_p25 / max(pct_kids_p25) * 100
) %>%
arrange(desc(pct_kids_p25, diversity), employrate, `pct_below_29.9`) %>%
select(county, county_state, pct_kids_p25, employrate, `pct_below_29.9`, diversity, geometry)
# solution-end
# solution-begin
weight_calc <- function(w1, w2, w3, w4) {
c(w1, w2, w3, w4) / sum(w1, w2, w3, w4)
}
weights <- weight_calc(0.45, 0.25, 0.25, 0.05)
# solution-end
# solution-begin
weights <- weight_calc(0.45, 0.25, 0.25, 0.25)
merged_data <-
merged_data %>%
rowwise() %>%
mutate(
weighted_rank = pct_kids_p25 * weights[1] +
employrate * weights[2] +
`pct_below_29.9` * weights[3] +
diversity * weights[4]
) %>%
arrange(desc(weighted_rank))
merged_data %>%
top_n(10, wt = weighted_rank)
merged_data %>%
top_n(-10, wt = weighted_rank)
# solution-end
merged_data %>%
write_csv("merged_data.csv")
# solution-begin
p <- chloroplether(
merged_data,
weighted_rank,
title_main = "Mapping the American Dream Index" ,
subtitle = "A County Ranking by Income Mobility, Accessible Jobs\nAffordable Housing, and Ethnic Diversity",
title_legend = "Personalized American Dream Index (%)",
caption = "Source: Raj Chetty Lab, ACS 5-Year Surveys"
)
# solution-end
library(shiny)
library(maps)
library(mapproj)
wd = "D:/GitHub"
setwd(wd)
source("american-dream/helpers.R")
df <- read_rds(D:/GitHub/american-dream/rMaps/data/violent_crime.rda)
df <- read_rds("D:/GitHub/american-dream/rMaps/data/violent_crime.rda")
attach("D:/GitHub/american-dream/rMaps/data/violent_crime.rda")
View(violent_crime)
options(stringsAsFactors = False)
install.packages("rmapshaper")
install.packages("datamaps")
options(stringsAsFactors = False)
options(stringsAsFactors = False)
options(stringsAsFactors = False)
options(stringsAsFactors = F)
ichoropleth(Crime ~ State,
data = violent_crime,
pal = `PuRd`,
animate = "Year"
)
options(stringsAsFactors = F)
ichloropleth(Crime ~ State,
data = violent_crime,
pal = `PuRd`,
animate = "Year"
)
options(stringsAsFactors = F)
ichloropleth(Crime ~ State,
data = violent_crime,
pal = `PuRd`,
animate = "Year"
)
options(stringsAsFactors = F)
ichoropleth(Crime ~ State,
data = violent_crime,
pal = `PuRd`,
animate = "Year"
)
options(stringsAsFactors = F)
ichoropleth(Crime ~ State,
data = violent_crime,
pal = `PuRd`,
animate = "Year"
)
library(datamaps)
options(stringsAsFactors = F)
ichoropleth(Crime ~ State,
data = violent_crime,
pal = `PuRd`,
animate = "Year"
)
?datamaps
?`datamaps-shiny`
install.packages("rmapshaper")
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
install.packages("RCurl")
shiny::runApp('D:/GitHub/american-dream/app')
library(RCurl)
install.packages("RCurl")
library(RCurl)
install.packages("bitops")
library(RCurl)
library(bitops)
shiny::runApp('D:/GitHub/american-dream/app')
?getURL
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
install.packages("curl")
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
gitURL <- ("https://github.com/g701/american-dream/raw/master/data/counties.rds")
download.file(gitURL, "counties.rds", method = "curl")
library(curl)
library(curl)
gitURL <- ("https://github.com/g701/american-dream/raw/master/data/counties.rds")
download.file(gitURL, "counties.rds", method = "curl")
counties <- readRDS("counties.rds")
?readRDS
runApp('D:/GitHub/american-dream/app')
gitURL <- ("https://github.com/g701/american-dream/blob/master/data/counties.rds?raw=true")
download.file(gitURL, "counties.rds", method = "curl")
counties <- readRDS(file = "counties.rds")
gitURL <- ("https://github.com/g701/american-dream/blob/master/data/counties.rds?raw=true")
download.file(gitURL, "counties.rds", method = "curl")
counties <- readRDS("counties.rds")
gitURL <- ("https://github.com/g701/american-dream/blob/master/data/counties.rds?raw=true")
download.file(gitURL, "counties.rds", method = "curl")
# Load packages ----
library(shiny)
library(maps)
library(mapproj)
library(RCurl)
library(curl)
# library(tidyverse)
# setwd("D:/GitHub/american-dream")
# Load data ----
gitURL <- ("https://github.com/g701/american-dream/blob/master/data/counties.rds?raw=true")
download.file(gitURL, "counties.rds", method = "curl")
df <- download.file(gitURL, "counties.rds", method = "curl")
runApp('D:/GitHub/american-dream/app')
readRDS(gitURL)
getwd()
setwd(getSrcDirectory()[1])
getwd(getSrcDirectory()[1])
getURL(gitURL)
getURL("https://github.com/g701/american-dream/blob/master/data/counties.rds")
url <- getURL("https://github.com/g701/american-dream/blob/master/data/counties.rds?raw=true")
url
library(RCurl)
getURL("https://github.com/g701/american-dream/blob/master/data/counties.rds?raw=true")
runApp
deployApp("app.R")
library(shiny)
deployApp("ShinyAppName")
runApp('D:/GitHub/american-dream/app')
runApp('D:/GitHub/american-dream/app')
deployApp("app.R")
runApp("app2.R")
runApp('D:/GitHub/american-dream/app/app2.R')
runApp("app.R")
runApp('D:/GitHub/american-dream/app')
setwd("~/")
setwd("D:/GitHub/american-dream/app")
runApp()
runApp()
runApp()
install.packages(c("maps", "mapproj"))
runApp()
runApp()
library(tidyverse)
# Data
data <- read_csv("file:///D:/GitHub/american-dream/merged_data.csv")
# Data
data <- read_csv("D:/GitHub/american-dream/merged_data.csv")
runApp()
?pnorm
?rnorm
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
